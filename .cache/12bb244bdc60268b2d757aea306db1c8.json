{"dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst getTamplate = (data = [], placeholder, selectedId) => {\n  let text = 0;\n  placeholder !== undefined ? text = placeholder : text = 'по умолчанию';\n  const items = data.map(item => {\n    let cls = '';\n    if (item.id === selectedId) {\n      text = item.value;\n      cls = 'selected';\n    }\n    return `<li class=\"select__item ${cls}\" data-type=\"item\" data-id=\"${item.id}\">${item.value}</li>`;\n  });\n  return `<div class=\"select__backdrop\" data-type=\"backdrop\"></div>\n    <div class=\"select__input\" data-type=\"input\">\n    <span data-type=\"value\">${text}</span>\n    <i class=\"fas fa-chevron-down\" data-type=\"arrow\"></i>\n</div>\n<div class=\"select__dropdown\">\n    <ul class=\"select__list\">\n        ${items.join('')}\n    </ul>\n</div>\n`;\n};\n\nclass Select {\n  constructor(selector, options) {\n    this.$el = document.querySelector(selector);\n    this.options = options;\n    this.selectedId = options.selectedId;\n    this.render();\n    this.setup();\n  }\n\n  render() {\n    const { placeholder, data } = this.options;\n    this.$el.classList.add('select');\n    this.$el.innerHTML = getTamplate(data, placeholder, this.selectedId);\n  }\n\n  setup() {\n    this.clickHandler = this.clickHandler.bind(this);\n    this.$el.addEventListener('click', this.clickHandler);\n    this.$arrow = this.$el.querySelector('[data-type=\"arrow\"]');\n    this.$value = this.$el.querySelector('[data-type=\"value\"]');\n  }\n\n  clickHandler(event) {\n    const { type } = event.target.dataset;\n    if (type === 'input') {\n      this.toggle();\n    } else if (type === 'item') {\n      const id = event.target.dataset.id;\n      this.select(id);\n    } else if (type === 'backdrop') {\n      this.close();\n    }\n  }\n\n  get isOpen() {\n    return this.$el.classList.contains('open');\n  }\n\n  get current() {\n    return this.options.data.find(item => item.id === this.selectedId);\n  }\n\n  select(id) {\n    this.selectedId = id;\n    this.$value.textContent = this.current.value;\n    this.$el.querySelectorAll('[data-type=\"item\"]').forEach(element => {\n      element.classList.remove('selected');\n    });\n    this.$el.querySelector(`[data-id=\"${id}\"]`).classList.add('selected');\n    this.options.onSelect ? this.options.onSelect(this.current) : null;\n    this.close();\n  }\n\n  toggle() {\n    this.isOpen ? this.close() : this.open();\n  }\n\n  open() {\n    this.$el.classList.add('open');\n    this.$arrow.classList.remove('fa-chevron-down');\n    this.$arrow.classList.add('fa-chevron-up');\n  }\n\n  close() {\n    this.$el.classList.remove('open');\n    this.$arrow.classList.add('fa-chevron-down');\n    this.$arrow.classList.remove('fa-chevron-up');\n  }\n\n  destoy() {\n    this.$el.removeEventListener('click', this.clickHandler);\n    this.$el.innerHTML = '';\n  }\n}\nexports.Select = Select;"},"hash":"ab2467fafcc25292a11c8d5c66e78690"}